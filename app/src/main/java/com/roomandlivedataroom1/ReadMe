1)make sure that you use butter knife implementations as well as recycler weave for the basic activity not the empty activity for the note activity
2)create an another activity called as editor activity and make sure that its parent activity is note activity
3)make the note activity as T launcher activity using the intent filters having action and category with main and launcher respectively
4)for the editor activity there is a collapsing toolbar which appears large when you leave it in the beginning and once when scroll it becomes small
5)You can see included layouts such as content_note, for activity_note and content_scrolling for activity_editor with context and shownIn set

Viewmodel
1.	When it comes to the viewmodel it is scoped to the activity if it is using an activity until it finishes or the process is being killed
2.	so when do we model is instantiated in the activity by using remodel providers method and factory method it automatically scopes it to the activity and then it might call the constructor of the view model that you have created inside that the app repository is instantiate iddb using getinstance with the application context being passed which in turn gets a database instance which is a single object referenced throughout the application
3.	then after using the menu to get the sample data would be to just put the sample data list that we have created into the database since we are not passing any ids while obtaining the note lists it would be automatically generated by the room database while inserting
4.	another important point would be if the note list are left without passing any ideas then zero is the default
5.	since room database automatically generates IDs multiple insertions of the ad sample data would create multiple list items with different ID's the conflict strategy is defined based on the ID's which are defined as primary key
6.	the Dao would have to have an abstract strategy in the repository instantiation



